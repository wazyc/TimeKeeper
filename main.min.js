const{app,BrowserWindow,ipcMain}=require("electron/main");const path=require("node:path");const Store=require("electron-store");const storeData=new Store({name:"data"});const createWindow=()=>{const win=new BrowserWindow({height:600,width:610,minWidth:610,maxWidth:610,webPreferences:{preload:path.join(__dirname,"preload.js")}});win.setAlwaysOnTop(true,"screen-saver");win.setMenuBarVisibility(false);win.loadFile("index.html")};app.whenReady().then(()=>{ipcMain.handle("ping",()=>"pong");createWindow()});ipcMain.handle("window-all-closed",()=>{if(process.platform!=="darwin")app.quit()});ipcMain.handle("activate",()=>{if(process.platform!=="darwin")app.quit()});ipcMain.handle("setTitle",(event,title)=>{console.log(title);const webContents=event.sender;const win=BrowserWindow.fromWebContents(webContents);win.setTitle(title)});ipcMain.handle("setScreenSize",(event,w,h)=>{const webContents=event.sender;const win=BrowserWindow.fromWebContents(webContents);win.setSize(w,h)});ipcMain.handle("getStore",async(event,k)=>{return storeData.get(k,[])});ipcMain.handle("setStore",async(event,k,v)=>{storeData.set(k,v)});ipcMain.handle("deleteStore",async(event,k)=>{storeData.delete(k)});ipcMain.handle("clearStore",async event=>{storeData.clear()});